// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jsBuilder convertToPostMessageString works 1`] = `"{\\"test\\":\\"hello world\\",\\"func\\":\\"function func() {\\\\n        alert('hello');\\\\n      }\\"}"`;

exports[`jsBuilder getJavascriptSource works 1`] = `
"
        var chart = echarts.init(document.getElementById('main'), undefined, {renderer: 'svg'});
        chart.setOption({\\"xAxis\\":{\\"type\\":\\"category\\",\\"data\\":[\\"Mon\\",\\"Tue\\",\\"Wed\\",\\"Thu\\",\\"Fri\\",\\"Sat\\",\\"Sun\\"]},\\"yAxis\\":{\\"type\\":\\"value\\"},\\"series\\":[{\\"data\\":[820,932,901,934,1290,1330,1320],\\"type\\":\\"line\\"}]});

        function sendData(data) {
            window.postMessage(JSON.stringify({\\"types\\":\\"DATA\\",\\"payload\\": data}));
        }

        function sendCallbackData(uuid, data) {
            window.postMessage(JSON.stringify({\\"types\\":\\"CALLBACK\\", \\"uuid\\": uuid, \\"payload\\": data}));
        }

        function getOS() {
            return ios;
        }

        function parse (data) {
            return JSON.parse(data, function (key, value) {

                if (value
                    && typeof value === \\"string\\"
                    && value.substr(0,8) == \\"function\\") {
                    var startBody = value.indexOf('{') + 1;
                    var endBody = value.lastIndexOf('}');
                    var startArgs = value.indexOf('(') + 1;
                    var endArgs = value.indexOf(')');

                    return new Function(value.substring(startArgs, endArgs)
                                      , value.substring(startBody, endBody));
                }
                return value;
            });
        }

        function toString (obj) {
            var result = JSON.stringify(obj, (key, val) => {
              if (typeof val === 'function') {
                return val.toString();
              }
              return val;
            });

            return result;
        };

        window.onresize = function() {
            chart.resize();
        };

        window.document.addEventListener('message', function(e) {
            var req = parse(e.data);

            switch(req.types) {
              case \\"SET_OPTION\\":
                chart.setOption(req.payload.option, req.payload.notMerge,req.payload.lazyUpate);
                break;
              case \\"CLEAR\\":
                chart.clear();
                break;
              case \\"GET_OPTION\\":
                var option = chart.getOption();
                var data = {};

                if(req.properties !== undefined) {
                    req.properties.forEach((prop) => data[prop] = option[prop]);
                } else {
                    var data = {
                        option: option
                     };
                }

                sendCallbackData(req.uuid, data);
                break;
              default:
                break;
            }
        });

        undefined
    "
`;

exports[`jsBuilder toString works 1`] = `"{\\"test\\":\\"hello world\\",\\"func\\":function func() {        alert('hello');      }}"`;
